schema {
  query: Query
}

type Query {
  anilist: Anilist
}

type Anilist {
  info(id: String!): Info
  trending(page: Int, perPage: Int): Trending
  popular(page: Int, perPage: Int): Popular
  episodeLink(id: String!): EpisodeLink
}

type Info {
  id: String
  title: Title
  malId: Int
  isLicensed: Boolean
  isAdult: Boolean
  countryOfOrigin: String
  image: String
  popularity: Int
  color: String
  cover: String
  description: String
  status: String
  releaseDate: Int
  totalEpisodes: Int
  currentEpisode: Int
  rating: Int
  duration: Int
  season: String
  subOrDub: String
  type: String
  episodes: [Episode]
  mappings: Mapping
  relations: [Relation]
  characters: [Characters]
  recommendations: [Recommendation]
  studios: [String]
  genres: [String]
  endDate: EndDate
  startDate: StartDate
  trailer: Trailer
  synonyms: [String]
}

interface Meta {
  currentPage: Int
  hasNextPage: Boolean
}

type Popular {
  currentPage: Int
  hasNextPage: Boolean
  results: [InfoList]
}

type Trending {
  currentPage: Int
  hasNextPage: Boolean
  results: [InfoList]
}

type InfoList {
  id: String
  malId: Int
  image: String
  description: String
  status: String
  cover: String
  rating: Int
  releaseDate: Int
  color: String
  totalEpisodes: Int
  duration: Int
  type: String
  genres: [String]
  title: Title
}

type EpisodeLink {
  headers: Header
  sources: [Source]
  download: String
}

type Title {
  romaji: String
  english: String
  native: String
  userPreferred: String
}

type Episode {
  id: String
  title: String
  description: String
  number: Int
  image: String
  airDate: String
}

type Mapping {
  mal: Int
  anidb: Int
  kitsu: Int
  anilist: Int
  thetvdb: Int
  anisearch: Int
  livechart: Int
  notifymoe: String
  animeplanet: String
}

type Relation {
  id: Int
  relationType: String
  malId: Int
  status: String
  episodes: String
  image: String
  color: String
  type: String
  cover: String
  rating: Int
  title: Title
}

type Name {
  first: String
  last: String
  full: String
  native: String
  userPreferred: String
}

type VoiceActors {
  id: Int
  language: String
  image: String
  name: Name
}

type Characters {
  id: Int
  role: String
  image: String
  voiceActors: [VoiceActors]
  name: Name
}

type Recommendation {
  id: Int
  malId: Int
  status: String
  episodes: Int
  image: String
  cover: String
  rating: Int
  type: String
  title: Title
}

type EndDate {
  year: Int
  month: Int
  day: Int
}

type StartDate {
  year: Int
  month: Int
  day: Int
}

type Trailer {
  id: String
  site: String
  thumbnail: String
}

type Header {
  Referer: String
}

type Source {
  url: String
  isM3U8: Boolean
  quality: String
}
